<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Reset Password</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f5f5;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .container {
      background: white;
      padding: 2rem;
      border-radius: 8px;
      max-width: 400px;
      width: 100%;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    h2 {
      margin-top: 0;
      text-align: center;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .input-group {
      position: relative;
    }

    .input-group input {
      padding: 0.8rem;
      font-size: 1rem;
      border: 1px solid #ccc;
      border-radius: 5px;
      width: 100%;
      box-sizing: border-box;
      padding-right: 2.5rem; 
    }

    .toggle-eye {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      user-select: none;
      font-size: 1.2rem;
      color: #666;
      width: 1.5rem;
      height: 1.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .error {
      color: red;
      font-weight: bold;
      text-align: center;
    }

    .success {
      color: green;
      font-weight: bold;
      text-align: center;
    }

    button {
      padding: 0.8rem;
      background: #007bff;
      color: white;
      font-size: 1rem;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background: #0056b3;
    }

    button:disabled {
      background: gray;
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>Reset Password</h2>

    <% if (error) { %>
      <div class="error"><%= error %></div>
    <% } %>

    <div class="error" id="clientError" style="display: none;"></div>
    <div class="success" id="successMsg" style="display: none;"></div>

    <form id="resetForm">
      <div class="input-group">
        <input type="password" id="password" placeholder="New Password" required />
        <span class="toggle-eye" data-target="password">&#128065;</span>
      </div>

      <div class="input-group">
        <input type="password" id="passwordConfirm" placeholder="Confirm Password" required />
        <span class="toggle-eye" data-target="passwordConfirm">&#128065;</span>
      </div>

      <button type="submit" id="submitBtn">Reset Password</button>
    </form>
  </div>

  <script>
    const form = document.getElementById('resetForm');
    const password = document.getElementById('password');
    const passwordConfirm = document.getElementById('passwordConfirm');
    const clientError = document.getElementById('clientError');
    const container = document.querySelector('.container');

    form.addEventListener('submit', async function (e) {
      e.preventDefault();

      const pwd = password.value.trim();
      const confirm = passwordConfirm.value.trim();

      if (!pwd || !confirm) {
        return showError('Both fields are required.');
      }

      if (pwd !== confirm) {
        return showError('Passwords must match.');
      }

      if (pwd.length < 8) {
        return showError('Password must be at least 8 characters.');
      }

      showError('');

      try {
        const res = await fetch(`<%= protocol %>://<%= host %>/auth/reset-password/<%= token %>`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            password: pwd,
            passwordConfirm: confirm,
          }),
        });

        const data = await res.json();

        if (!res.ok) {
          if (data.message === 'Token is either invalid or expired.') {
            replaceContainer(`
              <div class="container">
                <h2 class="error">Token is either invalid or expired.</h2>
              </div>
            `);
          } else {
            showError(data.message || 'Something went wrong.');
          }
        } else {
          replaceContainer(`
            <div class="container">
              <h2 class="success">Password reset successful!</h2>
            </div>
          `);
        }
      } catch (err) {
        showError('Request failed.');
      }
    });

    function showError(message) {
      clientError.style.display = message ? 'block' : 'none';
      clientError.textContent = message || '';
    }

    function replaceContainer(html) {
      document.body.innerHTML = html;
    }

    document.querySelectorAll('.toggle-eye').forEach(icon => {
      icon.addEventListener('click', () => {
        const input = document.getElementById(icon.dataset.target);
        const isHidden = input.type === 'password';
        input.type = isHidden ? 'text' : 'password';
        icon.textContent = isHidden ? 'üôà' : 'üëÅÔ∏è'; 
      });
    });
  </script>
</body>
</html>
